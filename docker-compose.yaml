x-minio-common: &minio-common
    image: quay.io/minio/minio:RELEASE.2023-08-09T23-30-22Z
    command: server --console-address ":9001" http://minio1/data{1...2}
    expose:
        - "9000"
        - "9001"
    environment:
        MINIO_ROOT_USER: minioadmin
        MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

services:
    minio1:
        <<: *minio-common
        hostname: minio1
        volumes:
        - data1-1:/data1
        - data1-2:/data2
    db:
        image: postgres:14-alpine
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=0000
            - POSTGRES_DB=test_db
        ports:
            - 5431:5432
        networks:
            - postgres
    migrate:
        image: migrate/migrate
        networks:
            - postgres
        volumes:
            - ./migration:/migration
        command: ["-path", "/migration", "-database",  "postgres://postgres:0000@db:5432/test_db?sslmode=disable", "up"]
        links: 
            - db
        depends_on:
            - db

    auth:
        build:
            context: .
            dockerfile: Dockerfile.auth
        command: ./app/main
        ports:
            - 8082:8082
        networks:
            - postgres
        volumes:
            - go-modules:/go/pkg/mod
        depends_on:
            - db
        environment:
            - db_name=test_db
            - db_pass=0000
            - db_user=postgres
            - db_type=postgres
            - db_host=db
            - db_port=5432
    
    object:
        build:
           context: .
           dockerfile: Dockerfile.object
        command: ./app/main
        ports:
            - 8081:8081
        networks:
            - postgres
        volumes:
            - go-modules:/go/pkg/mod
        depends_on:
            - db
        environment:
            - db_name=test_db
            - db_pass=0000
            - db_user=postgres
            - db_type=postgres
            - db_host=db
            - db_port=5432

    task:
        build:
            context: .
            dockerfile: Dockerfile.task
        command: ./app/main
        ports:
            - 8080:8080
        networks:
            - postgres
        volumes:
            - go-modules:/go/pkg/mod
        depends_on:
            - db
        environment:
            - db_name=test_db
            - db_pass=0000
            - db_user=postgres
            - db_type=postgres
            - db_host=db
            - db_port=5432
networks:
    postgres:
        driver: bridge

volumes:
    data1-1:
    data1-2:
    go-modules:
